{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Play",
				"PlayBoneCpTuckerPlugin"
			],
			[
				"Pl",
				"PlayBoneCpTuckerPlugin"
			],
			[
				"Con",
				"ContributorsController"
			],
			[
				"ma",
				"matchJsonSchemaResource"
			],
			[
				"back",
				"background-color"
			],
			[
				"_ma",
				"_matchesAnyField"
			],
			[
				"fun",
				"fun	Function"
			],
			[
				"_get",
				"_getFieldsToMatch"
			],
			[
				"_mat",
				"_matchesFilterString"
			],
			[
				"_",
				"_matches"
			],
			[
				"fir",
				"first_name"
			],
			[
				"ta",
				"targetDate"
			],
			[
				"mi",
				"min_mid"
			],
			[
				"max",
				"max_mid"
			],
			[
				"tae",
				"take_profit"
			],
			[
				"stop",
				"stop_loss"
			],
			[
				"cro",
				"cross"
			],
			[
				"take",
				"take_profit"
			],
			[
				"sto",
				"stop_loss"
			],
			[
				"pr",
				"print"
			],
			[
				"cross",
				"crossdate"
			],
			[
				"ide",
				"ideas_to_check"
			],
			[
				"ot",
				"outage_end"
			],
			[
				"out",
				"outage_start"
			],
			[
				"pa",
				"pairfile"
			],
			[
				"ou",
				"outage_end"
			],
			[
				"pai",
				"pairs_to_check"
			],
			[
				"idea",
				"ideas_to_check"
			],
			[
				"ideas",
				"ideas_to_check"
			],
			[
				"pl",
				"PlainResult"
			],
			[
				"ope",
				"openSubscription"
			],
			[
				"upco",
				"upcomingSubscription"
			],
			[
				"exp",
				"expiredSubscription"
			],
			[
				"ro",
				"rollableX"
			],
			[
				"com",
				"composer"
			],
			[
				"sub",
				"subscriptionYcompanyA"
			],
			[
				"su",
				"subscriptionXcompanyA"
			],
			[
				"roll",
				"rollableY"
			],
			[
				"rolla",
				"rollableX"
			],
			[
				"Ro",
				"RollablesWithSubscriptionsComposerUnitSpec"
			],
			[
				"Roll",
				"RollablesWithSubscriptionsComposer"
			],
			[
				"previ",
				"previous"
			],
			[
				"for",
				"for	for (…) {…} (Improved Native For-Loop)"
			],
			[
				"Base",
				"BaseFunctionalSpec	"
			],
			[
				"Pla",
				"PlayRealAppForScalaTest"
			],
			[
				"Be",
				"BCryptHashOfMatcher"
			],
			[
				"mat",
				"matchers"
			],
			[
				"BC",
				"BCryptHashOf"
			],
			[
				"B",
				"BCryptHashOf"
			],
			[
				"user",
				"userWithUpdatePassword"
			],
			[
				"fet",
				"fetchedUser"
			],
			[
				"co",
				"correctPassword"
			],
			[
				"fail",
				"failedAuthentication"
			],
			[
				"tr",
				"true"
			],
			[
				"pending",
				"pendingUntilFixed"
			],
			[
				"contain",
				"containMatch"
			],
			[
				"comp",
				"company_name"
			],
			[
				"toHave",
				"toHaveText"
			],
			[
				"_onR",
				"_onRollSaveError"
			],
			[
				"unfil",
				"unfilledShort"
			],
			[
				"unfill",
				"unfilledLong"
			],
			[
				"oe",
				"openCompanySubscriptions"
			],
			[
				"compa",
				"company_id"
			],
			[
				"company",
				"company_name"
			],
			[
				"toHa",
				"toHaveText"
			],
			[
				"Offer",
				"OffersFetcher"
			],
			[
				"cac",
				"cached_roll_statuses"
			],
			[
				"ano",
				"another_long_roll"
			],
			[
				"pre",
				"previous_rolls"
			],
			[
				"long",
				"long_roll"
			],
			[
				"tempor",
				"temporary_price"
			],
			[
				"fn",
				"function"
			],
			[
				"fu",
				"function"
			],
			[
				"tempo",
				"temporary_priced"
			],
			[
				"prev",
				"previous-short-rolls"
			],
			[
				"previ-",
				"previous-long-rolls"
			],
			[
				"be",
				"beforeEach"
			],
			[
				"log",
				"long_roll"
			],
			[
				"lo",
				"long_roll"
			],
			[
				"from",
				"fromString"
			],
			[
				"Direc",
				"DirectionUtils"
			],
			[
				"Flue",
				"FluentWebElement"
			],
			[
				"extrac",
				"extract2"
			],
			[
				"Compe",
				"CompetitionPage"
			],
			[
				"competition",
				"competitionUrl"
			],
			[
				"late",
				"LatestActivityModule"
			],
			[
				"return",
				"return_one_offer"
			],
			[
				"offer",
				"offer_data"
			],
			[
				"_of",
				"_offers"
			],
			[
				"fin",
				"findNextNonFutureOverridePriceFor"
			],
			[
				"_off",
				"_offersIntervalId"
			],
			[
				"_offer",
				"_offerTimerId"
			],
			[
				"nav",
				"_on_nav_click"
			],
			[
				"toCon",
				"toContain"
			],
			[
				"fetc",
				"fetchCount"
			],
			[
				"to",
				"toInt"
			],
			[
				"ex",
				"extract1"
			],
			[
				"La",
				"LatestActivityPage"
			]
		]
	},
	"buffers":
	[
		{
			"file": "module/src/main/scala/com/timgroup/play_bonecp_tucker/PlayBoneCpTuckerPlugin.scala",
			"settings":
			{
				"buffer_size": 1985,
				"line_ending": "Unix"
			}
		},
		{
			"file": "sample/app/controllers/Info.scala",
			"settings":
			{
				"buffer_size": 3438,
				"line_ending": "Unix"
			}
		},
		{
			"file": "sample/conf/play.plugins",
			"settings":
			{
				"buffer_size": 59,
				"line_ending": "Unix",
				"name": "500:com.timgroup.play_bonecp_tucker.PlayBoneCpTuck"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 285.0,
		"selected_items":
		[
			[
				"side",
				"View: Toggle Side Bar"
			],
			[
				"gitsta",
				"Git: Status"
			],
			[
				"gitstat",
				"Git: Status"
			],
			[
				"gitpush",
				"Git: Push"
			],
			[
				"gitpull",
				"Git: Pull"
			],
			[
				"gitcomm",
				"Git: Commit"
			],
			[
				"gitadd",
				"Git: Add..."
			],
			[
				"gitdiffa",
				"Git: Diff All"
			],
			[
				"gitdiff",
				"Git: Diff Current File"
			],
			[
				"gitpus",
				"Git: Push"
			],
			[
				"gitaddc",
				"Git: Add Current File"
			],
			[
				"gitpu",
				"Git: Push"
			],
			[
				"gitloga",
				"Git: Log All"
			],
			[
				"gpush",
				"Git: Push"
			],
			[
				"gipull",
				"Git: Pull"
			],
			[
				"sor",
				"Sort Lines (Case Sensitive)"
			],
			[
				"sort",
				"Sort Lines (Case Sensitive)"
			],
			[
				"prett",
				"Pretty JSON: Reformat (Pretty Print) JSON"
			],
			[
				"gtcus",
				"Git: Custom Command"
			],
			[
				"gitbl",
				"Git: Blame"
			],
			[
				"gitlog",
				"Git: Log Current File"
			],
			[
				"gitchec",
				"Git: Checkout Current File"
			],
			[
				"push",
				"Git: Push"
			],
			[
				"gpull",
				"Git: Pull"
			],
			[
				"gitcom",
				"Git: Commit"
			],
			[
				"gitre",
				"Git: Reset (unstage) All"
			],
			[
				"gitchec	",
				"Git: Checkout Current File"
			],
			[
				"pci",
				"Package Control: Install Package"
			],
			[
				"pull",
				"Git: Pull"
			],
			[
				"jasm",
				"Set Syntax: Jasmine"
			],
			[
				"jasmine",
				"Set Syntax: Jasmine"
			],
			[
				"blame",
				"Git: Blame"
			],
			[
				"gitreset",
				"Git: Reset (hard) HEAD"
			],
			[
				"stat",
				"Git: Status"
			],
			[
				"gtcomm",
				"Git: Commit"
			],
			[
				"gitst",
				"Git: Status"
			],
			[
				"prekey",
				"Preferences: Key Bindings - User"
			],
			[
				"key",
				"Preferences: Key Bindings - Default"
			],
			[
				"gitpul",
				"Git: Pull"
			],
			[
				"pcr",
				"Package Control: Remove Package"
			],
			[
				"mini",
				"View: Toggle Minimap"
			],
			[
				"pcl",
				"Package Control: List Packages"
			],
			[
				"pc",
				"Package Control: List Packages"
			],
			[
				"Package Control: ",
				"Package Control: List Packages"
			],
			[
				"togmi",
				"View: Toggle Minimap"
			],
			[
				"togside",
				"View: Toggle Side Bar"
			],
			[
				"ensi",
				"Ensime: Client Log"
			],
			[
				"gitad",
				"Git: Add..."
			],
			[
				"pcre",
				"Package Control: Remove Package"
			],
			[
				"gitgr",
				"Git: Graph All"
			],
			[
				"git status",
				"Git: Status"
			],
			[
				"gitp",
				"Git: Push"
			],
			[
				"json",
				"Pretty JSON: Reformat (Pretty Print) JSON"
			],
			[
				"gitstas",
				"Git: Stash Pop"
			],
			[
				"gitdif",
				"Git: Diff All"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"gitco",
				"Git: Custom Command"
			],
			[
				"ensis",
				"Ensime: Startup"
			],
			[
				"jso",
				"Pretty JSON: Reformat (Pretty Print) JSON"
			],
			[
				"gitsh",
				"Git: Show Current File"
			],
			[
				"gitq",
				"Git: Quick Commit"
			],
			[
				"setting",
				"Preferences: Settings - Default"
			],
			[
				"git statu",
				"Git: Status"
			],
			[
				"import",
				"Ensime: Add Import"
			],
			[
				"ensime",
				"Ensime: Add Import"
			],
			[
				"commit",
				"Git: Commit"
			],
			[
				"git add",
				"Git: Add..."
			],
			[
				"GITADD",
				"Git: Add..."
			],
			[
				"gtps",
				"Git: Push"
			],
			[
				"git pull",
				"Git: Pull"
			],
			[
				"giq",
				"Git: Quick Commit"
			],
			[
				"pcrem",
				"Package Control: Remove Package"
			],
			[
				"pcremo",
				"Package Control: Remove Package"
			],
			[
				"gitameco",
				"Git: Amend Commit"
			],
			[
				"gitdi",
				"Git: Diff All"
			],
			[
				"git psu",
				"Git: Push Current Branch"
			],
			[
				"git:qui",
				"Git: Quick Commit"
			],
			[
				"settinguse",
				"Preferences: Settings - User"
			],
			[
				"pcin",
				"Package Control: Install Package"
			],
			[
				"git push",
				"Git: Push"
			],
			[
				"ensb",
				"Ensime: Build"
			],
			[
				"ensibu",
				"Ensime: Build"
			],
			[
				"togsde",
				"View: Toggle Side Bar"
			],
			[
				"pain",
				"Package Control: Install Package"
			],
			[
				"gibla",
				"Git: Blame"
			],
			[
				"gitann",
				"Git: Toggle Annotations"
			],
			[
				"git",
				"Git: Blame"
			],
			[
				"pac",
				"Package Control: Remove Package"
			],
			[
				"pacco",
				"Package Control: Install Package"
			],
			[
				"setsyjava",
				"Set Syntax: JavaScript"
			],
			[
				"togmin",
				"View: Toggle Minimap"
			],
			[
				"status",
				"Git: Status"
			],
			[
				"togsid",
				"View: Toggle Side Bar"
			],
			[
				"ssles",
				"Set Syntax: LESS"
			],
			[
				"git stat",
				"Git: Status"
			],
			[
				"togstat",
				"View: Toggle Status Bar"
			],
			[
				"toggsta",
				"View: Toggle Status Bar"
			],
			[
				"toggsi",
				"View: Toggle Side Bar"
			],
			[
				"toggle",
				"View: Toggle Minimap"
			],
			[
				"gitb",
				"Git: Blame"
			],
			[
				"git pul",
				"Git: Pull"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"sbt",
				"SBT: Start Console"
			],
			[
				"git puh",
				"Git: Push"
			],
			[
				"git comm",
				"Git: Commit"
			],
			[
				"git stau",
				"Git: Status"
			],
			[
				"ssba",
				"Set Syntax: Shell Script (Bash)"
			],
			[
				"git q",
				"Git: Quick Commit"
			],
			[
				"git co",
				"Git: Commit"
			],
			[
				"gpus",
				"Git: Push"
			],
			[
				"gpu",
				"Git: Pull"
			],
			[
				"pcaddr",
				"Package Control: Add Repository"
			],
			[
				"gitstatus",
				"Git: Status"
			],
			[
				"gitlo",
				"Git: Log All"
			],
			[
				"gitg",
				"Git: Graph All"
			],
			[
				"gt push",
				"Git: Push"
			],
			[
				"git pu",
				"Git: Pull"
			],
			[
				"git com",
				"Git: Commit"
			],
			[
				"git commit",
				"Git: Commit"
			],
			[
				"disconn",
				"Collaborate: Disconnect from Chat Server"
			],
			[
				"colla",
				"Collaborate: Start New Session"
			],
			[
				"coll",
				"Collaborate: Disconnect from Chat Server"
			],
			[
				"pcins",
				"Package Control: Install Package"
			],
			[
				"install p",
				"Package Control: Install Package"
			],
			[
				"pacoad",
				"Package Control: Add Repository"
			],
			[
				"package",
				"Package Control: List Packages"
			],
			[
				"pcinsta",
				"Package Control: Install Package"
			]
		],
		"width": 647.0
	},
	"console":
	{
		"height": 542.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/fgigli/workspace/ideasfx/test/functional/controllers/ContributorsControllerFunctionalSpec.scala",
		"/home/fgigli/workspace/ideasfx/project/Build.scala",
		"/home/fgigli/workspace/ideasfx/conf/application.conf",
		"/home/fgigli/workspace/ideasfx/conf/application-logger.xml",
		"/home/fgigli/workspace/ideasfx/scripts/play-with-tunneled-db.sh",
		"/home/fgigli/workspace/ideasfx/app/fxi/controllers/ContributorsController.scala",
		"/home/fgigli/workspace/ideasfx/app/fxi/controllers/AuthConfigImpl.scala",
		"/home/fgigli/workspace/ideasfx/app/fxi/controllers/CurrenciesController.scala",
		"/home/fgigli/workspace/ideasfx/app/fxi/controllers/CompaniesController.scala",
		"/home/fgigli/workspace/ideasfx/app/fxi/models/User.scala",
		"/home/fgigli/workspace/ideasfx/test/helper/matchers/JsonSchemaMatcher.scala",
		"/home/fgigli/workspace/ideasfx/test/end2end/ActivitySpec.scala",
		"/home/fgigli/workspace/ideasfx/test/resources/schema/contributors.json",
		"/home/fgigli/workspace/ideasfx/conf/routes",
		"/home/fgigli/workspace/ideasfx/test/helper/ApiTestUtils.scala",
		"/home/fgigli/workspace/ideasfx/test/helper/Sessions.scala",
		"/home/fgigli/workspace/ideasfx/test/helper/UsersStepDefs.scala",
		"/home/fgigli/workspace/ideasfx/test/functional/controllers/CurrenciesControllerFunctionalSpec.scala",
		"/home/fgigli/workspace/ideasfx/app/fxi/models/FxIdeas.scala",
		"/home/fgigli/workspace/ideasfx/app/fxi/models/IdeaEvents.scala",
		"/home/fgigli/workspace/ideasfx/scripts/play-with-local-merc.sh",
		"/home/fgigli/workspace/ideasfx/test/fxi/helper/BaseUnitSpec.scala",
		"/home/fgigli/workspace/ideasfx/public/javascripts/fxi/modules/activity/templates/activity_view.handlebars",
		"/home/fgigli/workspace/ideasfx/public/javascripts/fxi/modules/activity/src/views/ideas_view.js",
		"/home/fgigli/workspace/ideasfx/public/javascripts/fxi/modules/activity/src/collections/recent_ideas.js",
		"/home/fgigli/workspace/ideasfx/public/javascripts/fxi/modules/activity/src/collections/filtered_ideas.js",
		"/home/fgigli/workspace/ideasfx/app/fxi/Global.scala",
		"/home/fgigli/workspace/ideasfx/test/fxi/end2end/api/FxIdeasAggregatePerformanceControllerFunctionalSpec.scala",
		"/home/fgigli/workspace/ideasfx/test/fxi/end2end/browser/PerformanceSpec.scala",
		"/home/fgigli/workspace/ideasfx/test/fxi/lib/MarketDataServiceUnitSpec.scala",
		"/home/fgigli/workspace/ideasfx/app/controllers/Info.scala",
		"/home/fgigli/workspace/ideasfx/app/fxi/controllers/FxIdeasController.scala",
		"/home/fgigli/workspace/ideasfx/app/fxi/performance/aggregate/AggregatePerformanceCalculator.scala",
		"/home/fgigli/workspace/ideasfx/app/fxi/performance/aggregate/PeriodPerformanceCalculator.scala",
		"/home/fgigli/workspace/ideasfx/test/fxi/lib/UtilsSpec.scala",
		"/home/fgigli/workspace/ideasfx/scripts/export-csv.sh",
		"/home/fgigli/workspace/ideasfx/public/javascripts/fxi/modules/activity/test/views/idea_view_spec.js",
		"/home/fgigli/workspace/ideasfx/public/stylesheets/less/fxi.less",
		"/home/fgigli/workspace/ideasfx/public/javascripts/fxi/modules/activity/test/collections/filtered_ideas_spec.js",
		"/home/fgigli/workspace/ideasfx/public/javascripts/fxi/modules/activity/stylesheets/activity.less",
		"/home/fgigli/workspace/ideasfx/public/javascripts/fxi/underscore.js",
		"/home/fgigli/workspace/ideasfx/ideasfx.sublime-project",
		"/home/fgigli/workspace/ideasfx/public/javascripts/fxi/modules/activity/src/views/idea_view.js",
		"/home/fgigli/workspace/ideasfx/public/javascripts/fxi/modules/activity/templates/idea_view.handlebars",
		"/home/fgigli/workspace/ideasfx/public/javascripts/fxi/modules/activity/templates/ideas_view.handlebars",
		"/home/fgigli/workspace/ideasfx/public/javascripts/fxi/modules/activity/src/views/activity_view.js",
		"/home/fgigli/workspace/ideasfx/public/javascripts/fxi/modules/activity/test/collections/recent_ideas_spec.js",
		"/home/fgigli/workspace/ideasfx/public/javascripts/fxi/app/models/idea.js",
		"/home/fgigli/workspace/ideasfx/public/javascripts/fxi/app/views/create_idea_view.js",
		"/home/fgigli/workspace/ideasfx/public/javascripts/fxi/test/test_runner.js",
		"/home/fgigli/workspace/ideasfx/public/javascripts/fxi/app/collections/ideas.js",
		"/home/fgigli/workspace/ideasfx/public/javascripts/fxi/app/views/my_ideas_view.js",
		"/home/fgigli/workspace/ideasfx/public/javascripts/fxi/app/models/loading_tracking_mixin.js",
		"/home/fgigli/workspace/ideasfx/public/javascripts/fxi/modules/activity/test/views/activity_view_spec.js",
		"/home/fgigli/workspace/ideasfx/public/javascripts/fxi/test/spec/app/views/create_idea_view_spec.js",
		"/home/fgigli/workspace/ideasfx/public/javascripts/fxi/test/spec/app/views/my_ideas_view_spec.js",
		"/home/fgigli/workspace/ideasfx/public/javascripts/fxi/test/spec/app/views/root_view_spec.js",
		"/home/fgigli/workspace/ideasfx/scripts/fix-autoclose-outage/README.md",
		"/home/fgigli/workspace/ideasfx/scripts/fix-autoclose-outage/fixer.py",
		"/home/fgigli/workspace/ideasfx/scripts/fix-autoclose-outage/fix-autoclose-outage.sh",
		"/home/fgigli/workspace/ideasfx/scripts/fix-autoclose-outage/output.txt",
		"/home/fgigli/workspace/ideasfx/scripts/fix-autoclose-outage/fix-autoclose-outage.py",
		"/home/fgigli/workspace/ideasfx/app/fxi/actors/FxAutoCloseNotificationActors.scala",
		"/home/fgigli/workspace/ideasfx/test/fxi/actors/FxStopLossNotificationActorUnitSpec.scala",
		"/home/fgigli/workspace/ideasfx/app/fxi/lib/JsonReadsAndWrites.scala",
		"/home/fgigli/workspace/ideasfx/app/fxi/models/FxSpotPrice.scala",
		"/home/fgigli/workspace/ideasfx/app/fxi/models/FxIdeaRepository.scala",
		"/home/fgigli/workspace/ideasfx/app/fxi/actors/FxHistoricalPricingActor.scala",
		"/home/fgigli/log-001",
		"/home/fgigli/log-002",
		"/home/fgigli/workspace/ideasfx/test/fxi/helper/UsersStepDefs.scala",
		"/home/fgigli/workspace/ideasfx/test/fxi/helper/Sessions.scala",
		"/home/fgigli/workspace/ideasfx/test/fxi/end2end/api/ReportingCSVIntegrationSpec.scala",
		"/home/fgigli/workspace/ideasfx/test/fxi/end2end/browser/BuySideUISpec.scala",
		"/home/fgigli/workspace/ideasfx/app/fxi/actors/ActivityTimeStampActor.scala",
		"/home/fgigli/.config/sublime-text-2/Packages/Default/Default (Linux).sublime-keymap",
		"/home/fgigli/.config/sublime-text-2/Packages/User/Default (Linux).sublime-keymap",
		"/home/fgigli/workspace/ideasfx/test/fxi/helper/PlayRealApp.scala",
		"/home/fgigli/workspace/ideasfx/test/fxi/helper/pages/SellSidePage.scala",
		"/home/fgigli/workspace/ideasfx/test/fxi/helper/pages/BuySidePage.scala",
		"/home/fgigli/workspace/ideasfx/test/fxi/helper/pages/BasePage.scala",
		"/home/fgigli/workspace/ideasfx/test/fxi/end2end/api/ClosedIdeasCSVExportFunctionalSpec.scala",
		"/home/fgigli/workspace/ideasfx/test/fxi/end2end/api/FxRatesIntegrationSpec.scala",
		"/home/fgigli/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/home/fgigli/workspace/futures-roll-frontend/futuresroll.sublime-project",
		"/home/fgigli/workspace/futures-roll-frontend/chromedriver.log",
		"/home/fgigli/workspace/futures-roll-frontend/app/models/GroupedSubscriptions.scala",
		"/home/fgigli/Documents/Sublime Text",
		"/home/fgigli/.config/sublime-text-3/Packages/Ensime/logs/client.log",
		"/home/fgigli/workspace/futures-roll-frontend/project/Build.scala",
		"/home/fgigli/.config/sublime-text-3/Packages/Default/Preferences.sublime-settings",
		"/home/fgigli/workspace/futures-roll-frontend/app/lib/RollablesWithSubscriptionsFetcher.scala",
		"/home/fgigli/workspace/futures-roll-frontend/test/lib/RollablesWithSubscriptionsComposerUnitSpec.scala",
		"/home/fgigli/workspace/futures-roll-frontend/.ensime",
		"/home/fgigli/.config/sublime-text-2/Packages/Ensime/logs/client.log",
		"/home/fgigli/.config/sublime-text-2/Packages/Default/Preferences.sublime-settings",
		"/home/fgigli/.config/sublime-text-2/Packages/User/Preferences.sublime-settings",
		"/home/fgigli/workspace/futures-roll-frontend/app/models/RollableWithSubscriptions.scala",
		"/home/fgigli/workspace/futures-roll-frontend/test/models/RollableWithSubscriptionsUnitSpec.scala",
		"/home/fgigli/workspace/futures-roll-frontend/app/models/RollableSubscriptions.scala",
		"/home/fgigli/workspace/futures-roll-frontend/app/models/RollableSubscriptionsFetcher.scala",
		"/home/fgigli/workspace/futures-roll-frontend/test/models/RollableSubscriptionsFetcherFunctionalSpec.scala",
		"/home/fgigli/workspace/futures-roll-frontend/app/controllers/RollablesController.scala",
		"/home/fgigli/workspace/futures-roll-frontend/app/controllers/RollsController.scala",
		"/home/fgigli/workspace/futures-roll-frontend/test/lib/RollablesWithSubscriptionsFetcherUnitSpec.scala",
		"/home/fgigli/workspace/futures-roll-frontend/test/controllers/RollablesControllerUnitSpec.scala",
		"/home/fgigli/workspace/futures-roll-frontend/app/lib/JsonReadsAndWrites.scala",
		"/home/fgigli/workspace/futures-roll-frontend/test/RunJsUnitSpec.scala",
		"/home/fgigli/workspace/futures-roll-frontend/app/lib/json/RollableJsonWrites.scala",
		"/home/fgigli/aaa.json",
		"/home/fgigli/workspace/futures-roll-frontend/public/javascripts/modules/competition/test/views/rollable_view_spec.js",
		"/home/fgigli/workspace/futures-roll-frontend/test/end2end/CompetitionClearDemoRollsSpec.scala",
		"/home/fgigli/workspace/futures-roll-frontend/public/javascripts/modules/competition/templates/rollable_view.handlebars",
		"/home/fgigli/workspace/futures-roll-frontend/public/javascripts/modules/competition/stylesheet/main.less",
		"/home/fgigli/workspace/futures-roll-frontend/public/less/app.less",
		"/home/fgigli/workspace/futures-roll-frontend/test/helper/pages/MonthlyCompetitionPage.scala",
		"/home/fgigli/workspace/futures-roll-frontend/app/controllers/Info.scala",
		"/home/fgigli/workspace/futures-roll-frontend/test/controllers/MissingPricesHealthComponentSpec.scala",
		"/home/fgigli/workspace/futures-roll-frontend/test/controllers/MissingPricesHealthComponentTest.scala",
		"/home/fgigli/workspace/futures-roll-frontend/public/less/bootstrap/modules/competition.less",
		"/home/fgigli/workspace/futures-roll-frontend/public/javascripts/modules/competition/src/views/rollable_view.js",
		"/home/fgigli/workspace/futures-roll-frontend/public/javascripts/modules/competition/src/views/rollable_with_statistics.js",
		"/home/fgigli/workspace/futures-roll-frontend/public/javascripts/app/helpers.js",
		"/home/fgigli/workspace/futures-roll-frontend/public/javascripts/test/test_helpers.js",
		"/home/fgigli/workspace/futures-roll-frontend/public/javascripts/modules/competition/test/views/roll_board_view_spec.js",
		"/home/fgigli/workspace/futures-roll-frontend/public/javascripts/modules/competition/test/views/roll_board_view_syncing_spec.js",
		"/home/fgigli/workspace/futures-roll-frontend/public/javascripts/test/spec/app/views/roll_board_view_syncing_spec.js",
		"/home/fgigli/workspace/futures-roll-frontend/app/assets/stylesheets/app.less"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
			"*Spec.scala",
			"*.scala",
			"",
			"*.js",
			"",
			"*.scala",
			"",
			"*.scala",
			"",
			"*.js",
			"*.scala",
			"Competition*.scala",
			"",
			"*js",
			"*handlebars",
			"",
			"*.scala",
			"*.less",
			"/home/fgigli/workspace/futures-roll-frontend/test",
			"",
			"*.scala",
			"*.js",
			"*.scala",
			"*.js",
			"",
			"/home/fgigli/workspace/futures-roll-frontend",
			"/home/fgigli/workspace/futures-roll-frontend/public/javascripts",
			"/home/fgigli/workspace/futures-roll-frontend/public/javascripts/test",
			"/home/fgigli/workspace/futures-roll-frontend/public/javascripts",
			"",
			"/home/fgigli/workspace/futures-roll-frontend/test",
			"test",
			"",
			"/home/fgigli/workspace/futures-roll-frontend/app",
			"/home/fgigli/workspace/futures-roll-frontend/public/javascripts"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"\n",
			"\"",
			"UserTypes",
			"withAuthorizedSession",
			"routeAndCall",
			"FakeRequest",
			"buyside",
			"inClause",
			"inset",
			"company",
			"WithActiveRequestCounting",
			"applyAdditionalProcessingToPlainResult",
			"Redeemed",
			"getBlueCrestCSV",
			"def getcs",
			"applyAdditionalProcessingToPlainResult",
			"WithResponseTime",
			"ask",
			"atomicCountOfActiveRequests",
			"countOfActiveRequests",
			"add",
			"parse",
			"tim_user_id",
			"_ideas",
			"ideas",
			"Ideas",
			"currencies",
			"options",
			"ClosedIdeasView",
			"_showMyIdeasRoute",
			"', '",
			"max",
			"', '",
			"hasOpenPrice",
			"fetchPricedOpenIdeasWithStopLoss",
			"findAndMetricIdeas",
			"ideasForNotification",
			"shouldAutoClose",
			"ideasForNotification",
			"FxAutoCloseActor",
			"FxStopLossNotificationActor",
			"subscriptions",
			"loggingService",
			"AutoCloseDbQueryRunTime",
			"FxSpotPricesRepository",
			"SendWhenActiveInLast",
			"pricingActor",
			"UserKinds",
			"create",
			"PlainResult",
			"end",
			"some",
			"result",
			"sessions",
			"Sessions",
			"def withAuthorizedSession",
			"withAuthorizedSession",
			"witha",
			"session",
			"FakeRequest",
			"routeAndCall",
			"fetchCSVResponse",
			"/fxi/",
			"resize",
			"now",
			"subscriptionsFor",
			"RollablesWithSubscriptionsFetcher",
			"RollableAndSubscriptions",
			"rollableWithSubscription",
			"RollableWithSubscriptions",
			"SavedRollableSubscription",
			"RollableWithSubscriptions",
			"RollableWithSubscriptionsAtPointInTime",
			"RollableWithSubscriptions",
			"unfilled-long-roll",
			".unfilled",
			"\\.unfilled-(long|short)-roll",
			"[executed-long-roll]",
			"[executed-short-roll]",
			"executed-long-roll",
			"\\.executed-(long|short)-roll",
			".executed-(long|short)-roll",
			"executed-short-roll",
			".total-percentage-long-rolled",
			".total-percentage-short-rolled",
			".toBe",
			".length",
			"executed",
			"MissingPricesHealthComponent",
			"#subscription-(\\d)",
			".rollable-no-subscriptions",
			"rollable-no-subscriptions",
			"h.Rollable",
			"Rollable",
			"h.Rollable",
			"percentage-bar",
			"percentage-complete",
			"percentage-bar",
			"data-percent-complete",
			"percentageComplete",
			"percentage-bar",
			"complete",
			"percentage-bar",
			"percentage-bar-long",
			"createSubscription",
			"createUnsavedRoll",
			"LoggingMercErrorScope",
			"Status",
			"LoggingMercErrorScope",
			"BaseAcceptanceSpec",
			"user_agent",
			"org.scalatest",
			"org.scalatest.FunSpec",
			"mouse",
			"RollablesWithSubscriptionsFetcher",
			"BaseFuntionalSpec",
			"BaseAcceptanceSpec",
			"rollWithPrice",
			"}",
			"{",
			"$",
			"def createUnsavedRoll",
			"createUnsavedRoll",
			"class",
			"Example",
			"Examplar",
			"text",
			"extract1"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"`",
			"/",
			"[data-unfilled-$1-roll]",
			"[data-executed-long-roll]",
			"[data-executed-short-roll]",
			"[executed-$1-roll]",
			"[data-percentage-long-rolled]",
			"[data-percentage-short-rolled]",
			"[data-subscription-id=$1]",
			"[data-rollable-no-subscriptions]",
			"Rollable",
			"data-percentage-complete",
			"RollStepDefs.createUnsavedRoll",
			"",
			"before",
			"'",
			"RollBoardView",
			"view"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": false,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "module/src/main/scala/com/timgroup/play_bonecp_tucker/PlayBoneCpTuckerPlugin.scala",
					"settings":
					{
						"buffer_size": 1985,
						"regions":
						{
						},
						"selection":
						[
							[
								715,
								715
							]
						],
						"settings":
						{
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": true,
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Jasmine": "JavaScript",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "sample/app/controllers/Info.scala",
					"settings":
					{
						"buffer_size": 3438,
						"regions":
						{
						},
						"selection":
						[
							[
								587,
								587
							]
						],
						"settings":
						{
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": true,
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Jasmine": "JavaScript",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Scala/Scala.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 162.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "sample/conf/play.plugins",
					"settings":
					{
						"buffer_size": 59,
						"regions":
						{
						},
						"selection":
						[
							[
								59,
								59
							]
						],
						"settings":
						{
							"annotations":
							[
								"TODO",
								"README",
								"FIXME"
							],
							"auto_name": "500:com.timgroup.play_bonecp_tucker.PlayBoneCpTuck",
							"csslint_options":
							{
								"adjoining-classes": "warning",
								"box-model": true,
								"box-sizing": "warning",
								"compatible-vendor-prefixes": "warning",
								"display-property-grouping": true,
								"duplicate-background-images": "warning",
								"duplicate-properties": true,
								"empty-rules": true,
								"errors": true,
								"fallback-colors": "warning",
								"floats": "warning",
								"font-faces": "warning",
								"font-sizes": "warning",
								"gradients": "warning",
								"ids": "warning",
								"import": "warning",
								"important": "warning",
								"known-properties": true,
								"outline-none": "warning",
								"overqualified-elements": "warning",
								"qualified-headings": "warning",
								"regex-selectors": "warning",
								"rules-count": "warning",
								"shorthand": "warning",
								"star-property-hack": "warning",
								"text-indent": "warning",
								"underscore-property-hack": "warning",
								"unique-headings": "warning",
								"universal-selector": "warning",
								"vendor-prefix": true,
								"zero-units": "warning"
							},
							"gjslint_ignore":
							[
								110
							],
							"gjslint_options":
							[
							],
							"javascript_linter": "jshint",
							"jshint_options":
							{
								"browser": true,
								"evil": true,
								"regexdash": true,
								"sub": true,
								"trailing": true,
								"wsh": true
							},
							"pep8": true,
							"pep8_ignore":
							[
								"E501"
							],
							"perl_linter": "perlcritic",
							"pyflakes_ignore":
							[
							],
							"pyflakes_ignore_import_*": true,
							"sublimelinter": true,
							"sublimelinter_delay": 2,
							"sublimelinter_disable":
							[
							],
							"sublimelinter_executable_map":
							{
							},
							"sublimelinter_fill_outlines": false,
							"sublimelinter_gutter_marks": true,
							"sublimelinter_gutter_marks_theme": "simple",
							"sublimelinter_mark_style": "none",
							"sublimelinter_notes": false,
							"sublimelinter_objj_check_ascii": false,
							"sublimelinter_popup_errors_on_save": false,
							"sublimelinter_syntax_map":
							{
								"C++": "c",
								"Jasmine": "JavaScript",
								"Python Django": "python",
								"Ruby on Rails": "ruby"
							},
							"sublimelinter_wrap_find": true,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 38.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 352.0
	},
	"output.git":
	{
		"height": 192.0
	},
	"output.sbt":
	{
		"height": 0.0
	},
	"output.sbt_error":
	{
		"height": 0.0
	},
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"concon",
				"test/functional/controllers/ContributorsControllerFunctionalSpec.scala"
			],
			[
				"build.sc",
				"project/Build.scala"
			],
			[
				"appco",
				"conf/application.conf"
			],
			[
				"appxm",
				"conf/application-logger.xml"
			],
			[
				"platunn",
				"scripts/play-with-tunneled-db.sh"
			],
			[
				"contr",
				"app/fxi/controllers/ContributorsController.scala"
			],
			[
				"user",
				"app/fxi/models/User.scala"
			],
			[
				"userste",
				"test/helper/UsersStepDefs.scala"
			],
			[
				"route",
				"conf/routes"
			],
			[
				"build.scala",
				"project/Build.scala"
			],
			[
				"fxeve",
				"app/fxi/models/IdeaEvents.scala"
			],
			[
				"fxide",
				"app/fxi/models/FxIdeas.scala"
			],
			[
				"merc",
				"scripts/play-with-local-merc.sh"
			],
			[
				"run-w",
				"scripts/run-with-local-merc.sh"
			],
			[
				"baseu",
				"test/fxi/helper/BaseUnitSpec.scala"
			],
			[
				"filter",
				"public/javascripts/fxi/modules/activity/src/collections/filtered_ideas.js"
			],
			[
				"period",
				"app/fxi/performance/aggregate/PeriodPerformanceCalculator.scala"
			],
			[
				"aggre",
				"app/fxi/performance/aggregate/AggregatePerformanceCalculator.scala"
			],
			[
				"fxideas",
				"app/fxi/controllers/FxIdeasController.scala"
			],
			[
				"info",
				"app/controllers/Info.scala"
			],
			[
				"glo",
				"app/fxi/Global.scala"
			],
			[
				"expo",
				"scripts/export-csv.sh"
			],
			[
				"auth",
				"app/fxi/controllers/AuthConfigImpl.scala"
			],
			[
				"rout",
				"conf/routes"
			],
			[
				"global",
				"app/fxi/Global.scala"
			],
			[
				"fxi.less",
				"public/stylesheets/less/fxi.less"
			],
			[
				"under",
				"public/javascripts/fxi/underscore.js"
			],
			[
				"filterspec",
				"public/javascripts/fxi/modules/activity/test/collections/filtered_ideas_spec.js"
			],
			[
				"filt",
				"public/javascripts/fxi/modules/activity/src/collections/filtered_ideas.js"
			],
			[
				"creaideaview",
				"public/javascripts/fxi/app/views/create_idea_view.js"
			],
			[
				"routes",
				"conf/routes"
			],
			[
				"fxideacont",
				"app/fxi/controllers/FxIdeasController.scala"
			],
			[
				"rootviews",
				"public/javascripts/fxi/test/spec/app/views/root_view_spec.js"
			],
			[
				"myideaviewspec",
				"public/javascripts/fxi/test/spec/app/views/my_ideas_view_spec.js"
			],
			[
				"createideaviewspec",
				"public/javascripts/fxi/test/spec/app/views/create_idea_view_spec.js"
			],
			[
				"rootviewspec",
				"public/javascripts/fxi/test/spec/app/views/root_view_spec.js"
			],
			[
				"loadingt",
				"public/javascripts/fxi/app/models/loading_tracking_mixin.js"
			],
			[
				"ideasjs",
				"public/javascripts/fxi/app/collections/ideas.js"
			],
			[
				"create_idea",
				"public/javascripts/fxi/test/spec/app/views/create_idea_view_spec.js"
			],
			[
				"create_idea_view_",
				"public/javascripts/fxi/test/spec/app/views/create_idea_view_spec.js"
			],
			[
				"myidea",
				"public/javascripts/fxi/app/views/my_ideas_view.js"
			],
			[
				"outp",
				"scripts/fix-autoclose-outage/output.txt"
			],
			[
				"re",
				"scripts/fix-autoclose-outage/README.md"
			],
			[
				"fix",
				"scripts/fix-autoclose-outage/fixer.py"
			],
			[
				"fix-a",
				"scripts/fix-autoclose-outage/fix-autoclose-outage.py"
			],
			[
				"fxstoplossnotificationactor",
				"test/fxi/actors/FxStopLossNotificationActorUnitSpec.scala"
			],
			[
				"fxso",
				"app/fxi/models/FxSpotPrice.scala"
			],
			[
				"fxhistoricalpricingactor",
				"app/fxi/actors/FxHistoricalPricingActor.scala"
			],
			[
				"globa",
				"app/fxi/Global.scala"
			],
			[
				"jsonre",
				"app/fxi/lib/JsonReadsAndWrites.scala"
			],
			[
				"ideacontroll",
				"app/fxi/controllers/FxIdeasController.scala"
			],
			[
				"userstep",
				"test/fxi/helper/UsersStepDefs.scala"
			],
			[
				"fxcontrolle",
				"app/fxi/controllers/FxIdeasController.scala"
			],
			[
				"sessions",
				"test/fxi/helper/Sessions.scala"
			],
			[
				"playrealap",
				"test/fxi/helper/PlayRealApp.scala"
			],
			[
				"basepage",
				"test/fxi/helper/pages/BasePage.scala"
			],
			[
				"buyside",
				"test/fxi/helper/pages/BuySidePage.scala"
			],
			[
				"sellsi",
				"test/fxi/helper/pages/SellSidePage.scala"
			],
			[
				"fxratesinte",
				"test/fxi/end2end/api/FxRatesIntegrationSpec.scala"
			],
			[
				"closedideascsv",
				"test/fxi/end2end/api/ClosedIdeasCSVExportFunctionalSpec.scala"
			],
			[
				"playreal",
				"test/fxi/helper/PlayRealApp.scala"
			],
			[
				"fproj",
				"futuresroll.sublime-project"
			],
			[
				"grou",
				"app/models/GroupedSubscriptions.scala"
			],
			[
				"b.sca",
				"project/Build.scala"
			],
			[
				"fu",
				"futuresroll.sublime-project"
			],
			[
				"",
				"app/lib/RollablesWithSubscriptionsFetcher.scala"
			],
			[
				"rollsu",
				"app/models/RollableSubscriptions.scala"
			],
			[
				"rollwis",
				"app/models/RollableWithSubscriptions.scala"
			],
			[
				"rolwis",
				"test/models/RollableWithSubscriptionsUnitSpec.scala"
			],
			[
				"rollablew",
				"app/lib/RollablesWithSubscriptionsFetcher.scala"
			],
			[
				"rollafetc",
				"app/models/RollableSubscriptionsFetcher.scala"
			],
			[
				"rollsubfef",
				"test/models/RollableSubscriptionsFetcherFunctionalSpec.scala"
			],
			[
				"rollwsubfeu",
				"test/lib/RollablesWithSubscriptionsFetcherUnitSpec.scala"
			],
			[
				"rollablesubscriptionsfetcher",
				"app/models/RollableSubscriptionsFetcher.scala"
			],
			[
				"rollableswithsubscriptionsfetcher",
				"app/lib/RollablesWithSubscriptionsFetcher.scala"
			],
			[
				"rollacontr",
				"app/controllers/RollablesController.scala"
			],
			[
				"rollcontro",
				"app/controllers/RollsController.scala"
			],
			[
				"buil.sca",
				"project/Build.scala"
			],
			[
				"rollwihs",
				"app/lib/RollablesWithSubscriptionsFetcher.scala"
			],
			[
				"run",
				"test/RunJsUnitSpec.scala"
			],
			[
				"rollcon",
				"app/controllers/RollsController.scala"
			],
			[
				"rollablewith",
				"app/models/RollableWithSubscriptions.scala"
			],
			[
				"rollj",
				"app/lib/json/RollableJsonWrites.scala"
			],
			[
				"monpage",
				"test/helper/pages/MonthlyCompetitionPage.scala"
			],
			[
				"roljson",
				"app/lib/json/RollableJsonWrites.scala"
			],
			[
				"app.less",
				"public/less/app.less"
			],
			[
				"main.less",
				"public/javascripts/modules/competition/stylesheet/main.less"
			],
			[
				"rollhand",
				"public/javascripts/modules/competition/templates/rollable_view.handlebars"
			],
			[
				"missing",
				"test/controllers/MissingPricesHealthComponentSpec.scala"
			],
			[
				"he",
				"public/javascripts/app/helpers.js"
			],
			[
				"rollstatistics",
				"public/javascripts/modules/competition/src/views/rollable_with_statistics.js"
			],
			[
				"rollable_vie",
				"public/javascripts/modules/competition/src/views/rollable_view.js"
			],
			[
				"rollablejson",
				"app/lib/json/RollableJsonWrites.scala"
			],
			[
				"roll_board_view_spec.js",
				"public/javascripts/modules/competition/test/views/roll_board_view_spec.js"
			],
			[
				"roll_bovis",
				"public/javascripts/modules/competition/test/views/roll_board_view_syncing_spec.js"
			],
			[
				"helper.",
				"public/javascripts/test/test_helpers.js"
			],
			[
				"rollable_viw",
				"public/javascripts/modules/competition/test/views/rollable_view_spec.js"
			],
			[
				"compep",
				"test/helper/pages/MonthlyCompetitionPage.scala"
			],
			[
				"rollcreation",
				"public/javascripts/modules/competition/src/views/roll_creation_view.js"
			],
			[
				"rollcreate",
				"public/javascripts/modules/competition/templates/roll_creation_view.handlebars"
			],
			[
				"helper",
				"public/javascripts/app/helpers.js"
			],
			[
				"rollablview",
				"public/javascripts/modules/competition/templates/rollable_view.handlebars"
			],
			[
				"upc",
				"public/javascripts/modules/competition/src/views/upcoming_subscription_for_view.js"
			],
			[
				"subforvi",
				"public/javascripts/modules/competition/src/views/subscription_for_view.js"
			],
			[
				"formatting",
				"public/javascripts/modules/competition/src/views/formatting.js"
			],
			[
				"rollable_wi",
				"public/javascripts/modules/competition/src/views/rollable_with_statistics.js"
			],
			[
				"rollable_",
				"public/javascripts/modules/competition/src/views/rollable_view.js"
			],
			[
				"rollabljs",
				"app/lib/json/RollableJsonWrites.scala"
			],
			[
				"b",
				"project/Build.scala"
			],
			[
				"compepage",
				"test/helper/pages/MonthlyCompetitionPage.scala"
			],
			[
				"competitispe",
				"test/end2end/CompetitionSpec.scala"
			],
			[
				"rollste",
				"test/helper/RollStepDefs.scala"
			],
			[
				"rollastepdef",
				"test/helper/RollableStepDefs.scala"
			],
			[
				"compespe",
				"test/end2end/CompetitionSpec.scala"
			],
			[
				"flic",
				"scripts/flicker-finder.sh"
			],
			[
				"dailyuni",
				"test/actors/DailyHighLowActorUnitSpec.scala"
			],
			[
				"carrytradef",
				"test/models/CarryTradeFunctionalSpec.scala"
			],
			[
				"bu",
				"project/Build.scala"
			],
			[
				"baseacc",
				"test/helper/BaseAcceptanceSpec.scala"
			],
			[
				"build.sca",
				"project/Build.scala"
			],
			[
				"rollacunispe",
				"test/controllers/RollablesControllerUnitSpec.scala"
			],
			[
				"rcup",
				"test/controllers/RollablesControllerUnitSpec.scala"
			],
			[
				"basef",
				"test/helper/BaseFunctionalSpec.scala"
			],
			[
				"rollacon",
				"test/controllers/RollablesControllerFunctionalSpec.scala"
			],
			[
				"rollcontf",
				"test/controllers/RollsControllerFunctionalSpec.scala"
			],
			[
				"base",
				"test/helper/BaseFunctionalSpec.scala"
			],
			[
				"users",
				"test/models/UsersFunctionalSpec.scala"
			],
			[
				"showin",
				"test/lib/ShowInDevelopmentUnitSpec.scala"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
			[
				"fut",
				"/home/fgigli/workspace/futures-roll-frontend/futuresroll.sublime-project"
			],
			[
				"da",
				"/home/fgigli/workspace/dashboard4metrics/dashboard4metrics.sublime-project"
			],
			[
				"",
				"/home/fgigli/workspace/ideasfx/ideasfx.sublime-project"
			],
			[
				"futu",
				"/home/fgigli/workspace/futures-roll-frontend/futuresroll.sublime-project"
			],
			[
				"mer",
				"/home/fgigli/workspace/Merc/merc.sublime-project"
			],
			[
				"dis",
				"/home/fgigli/workspace/discretionary-pm/discretionary-pm.sublime-project"
			]
		],
		"width": 380.0
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 284.0,
	"status_bar_visible": true
}
